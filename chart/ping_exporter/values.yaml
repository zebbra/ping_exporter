# Default values for ping_exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: quay.io/zebbra/ping_exporter
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

# Security context - ping_exporter requires NET_RAW capability for ICMP
securityContext:
  capabilities:
    add:
    - NET_RAW
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 9115

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ping-exporter.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: ping-exporter-tls
  #    hosts:
  #      - ping-exporter.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /metrics
    port: http
  initialDelaySeconds: 30
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /metrics
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Ping exporter specific configuration
pingExporter:
  # Command-line arguments for the ping exporter
  args:
    # Global logging level (debug, info, warn, error)
    logLevel: info
    # Log format (logfmt or json)
    logFormat: logfmt
    # Address to listen on for web interface and telemetry
    webListenAddress: ":9115"
    # Default values for ping parameters
    defaultCount: 3
    defaultInterval: "1s"
    defaultPacketSize: 64
    defaultTimeout: "5s"
    # Maximum allowed values
    maxCount: 100
    maxPacketSize: 65507
  
  # Web configuration file for TLS/basic auth (optional)
  webConfig:
    enabled: false
    # Content of the web config file
    # See: https://github.com/prometheus/exporter-toolkit/blob/master/docs/web-configuration.md
    config: {}
    # tls_server_config:
    #   cert_file: /etc/certs/tls.crt
    #   key_file: /etc/certs/tls.key
    # basic_auth_users:
    #   admin: $2y$10$...

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: false
  # Additional labels for the ServiceMonitor
  labels: {}
  # Scrape interval
  interval: 30s
  # Scrape timeout
  scrapeTimeout: 10s
  # Additional annotations for the ServiceMonitor
  annotations: {}
  # Prometheus selector labels
  # selector:
  #   prometheus: kube-prometheus

# PrometheusRule for alerting
prometheusRule:
  enabled: false
  # Additional labels for the PrometheusRule
  labels: {}
  # Additional annotations for the PrometheusRule
  annotations: {}
  # Rules to be created
  rules: []
  # - alert: PingExporterDown
  #   expr: up{job="ping-exporter"} == 0
  #   for: 5m
  #   labels:
  #     severity: critical
  #   annotations:
  #     summary: "Ping Exporter is down"
  #     description: "Ping Exporter has been down for more than 5 minutes."